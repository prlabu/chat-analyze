Project structure

Message
 |datetime: Datetime
 |sender: Participant
 |original_text: str
 |sensored_text: str
 |attachments: str
 |chat: Chat
 |msg_number: int
 |ID: chat.name + msg_number


 Participant
 |name_in_chat: str
 |ID: str
 |pseudonym: str
 |phone: str
 |chat: Chat
 |gender: str
 |age: str
 |ethnicity: str


Chat
 |ID: str
 |messages: Message[]
 |participants: Participant{}
 |meta: str
 anonymize()
 replace_string(a:str, b:str)
 to_csv(filename: str)
 to_json(filename:str)
 find_all_links()
 find_all_phones()



Notes: 
Messages from WhatsApp are currently considered valid messages, with sender=WhatsApp
It is assumed that only one type of format is present within one text file. 
Phone numbers can be very hard to find, so the user validates each one individually. For example, the list of 2018s look very much like phone numbers to a computer. For now, we are only matching phone numbers that look like @6583827520, which are generated by WhatsApp. 
At first, I was honestly making it too difficult on myself by trying to make it very generalized. But with such a range of data, it simply can't be all-encompassing. 
- I split up the text files such that a single file contains only the WhatsApp messages. It should contain no metadata at all. I did my best to split up the files but it's very possible that I missed the splitting of one. If this is the case, there will be a very long message somewhere in the database.
- Explain phone number replacement: each message is asked individually. This can be tedious (for example, chat #1 has 148 matches of phone numbers.)
- Web links are optionally found automatically and replaced. 
- Messages are separated into two types: WhatsApp messages (message-type='whatsapp-meta' and sender='WhatsApp)
- I had to separate out the chats. It takes a while to find the split in the chats, and sometimes it's not obvious if there even is one. For example, in 2018-CHI_F55_R_x_2 the line split was on line 42,600. The only way I figured that out was finding where the messages dates/times were not chronological. 
- The file are now in different directories: the text files in raw_txt, the CSVs in 'csv', and the metadata (text files) in 'meta' 
- There are random inconsistencies in the data that I'm not sure are intentional. For example, there is a message "[7/12/17, 10:22:34 PM] E/F/CH/20 Hers is not aquathon right" in 2018-CHI_F36_R_x. The colon is missing even though the message was seemingly sent by a user. I suppose this is error on the part of someone who was previously processing the data. I didn't know what to do, and the script currently treats it as a WhatsApp meta-message because it's format is most like a meta message. 
    - Another example of inconsistency is "[18/5/2017, 10:30:59 am] SS/F/CH/24Taking the class at the changi simei cc" in chat 2018-CHI_F42_R_x_7. It's missing a colon too. 
    - Another very strange one: [6/8/2017, 11:86:59 pm] HL/F/CH/23: so far the pnes i've been in 2018-CHI_F42_R_x_7. 11:86:59 is the time marker. 86 seconds? 
    - There are several instances in which someone must have deleted the space after the colon in 2018-CHI_F55_R_x. It happens about 15 times in ~7500 messages. Eg: "14/10/2015, 19:50 - YH/F/CH/22:HY/M/CH/24 u damn late"
    - The same happens about 30 times in ~14,000 messages in 2018-CHI_M10_R_x. 
    - In chat 2018-IND_F5_R_x, the user deleted the colon when they were sensoring messages with '<message>'. This means that this messsage format is different from every other content message. It looks like a meta message, so that's how it's processed. 
    - Chat 2018-IND_F6_R_x is very inconsistent. For example, the double colon occurs quite a few times for no apparent reason. "[26/12/16, 5:51:08 PM] ‪DL/F/CH/19:‬: Lol best‬‬‬‬‬‬"
    - 2018-IND_F6_R_x.txt is the most different format. Instead of "[date, time] sender: message" like every other file, they use "sender [date, time]: message". I played with it for about half and hour before I realized it may be able to just account for this one by hand. I am not sure it's worth changing the script for this one file. 
- 2018-CHI_F42_R_x is now split into 6 chats, and they each had different TXT formats.
- The script stalls out when processing 2018-CHI_F52_R_x. I really have no idea why this would happen.
    - This also happens on chat 2018-MAL_F3_R_x. I think it has something to do with the encoding scheme. If I take out the message "[29/5/17, 2:32:10 PM] â€ŽSH/F/MA/23 changed the subject to â€œ#NUSTehPinkies ðŸ‘‘ðŸ‘©ðŸ»â€ðŸŽ“â€", everything works okay. 

- Moral of the story: it's really hard to account for all the tiny specific ways in which the users have changed the data files. It would be much easier to process raw files that are uniform. I did my best to account for the differences but at the end of the day there are so many variations it's almost impossible to account for automatically.


The standard progresssion is: 
call parse chat, specifying with text file you want to parse along with its format
have the option to add user details (pseudonym, age, etc)
find all phone numbers
find all links




TODO:
check for WhatsApp meta msgs
make sure dateutil is parsing dates correctly, 12hr vs 24hr
preprocessing - make sure no [] in the chat besides the assumed ones
README




HOURS: 
15 March : 2-6, 7-10
18 April : 9-1 pm
27 April: 7:30pm - 10:30pm
29 April: 11:30am - 2pm, 12:30-2am
7 May: 10:15am - 1:45pm
12 May: 8pm - 10pm
13 May: 3-4:30pm, 9-11:30pm
14 May: 9am-12pm


